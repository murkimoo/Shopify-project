{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_index.tsx\");\n  import.meta.hot.lastModified = \"1746770347573.6982\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Form, useNavigation } from \"@remix-run/react\";\nimport { Page, Layout, Card, ResourceList, ResourceItem, Thumbnail, Button, Banner, Text, BlockStack, InlineStack } from \"@shopify/polaris\";\nimport { getProducts } from \"~/models/product.server\";\nimport { getWishlist, addToWishlist, removeFromWishlist, isInWishlist, wishlistCookie } from \"~/models/wishlist.server\";\nexport const loader = async ({\n  request\n}) => {\n  const products = getProducts();\n  const wishlistItems = await getWishlist(request);\n  const productsWithWishlistStatus = await Promise.all(products.map(async product => ({\n    ...product,\n    inWishlist: await isInWishlist(request, product.id)\n  })));\n  return json({\n    products: productsWithWishlistStatus,\n    wishlistCount: wishlistItems.length\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const productId = formData.get(\"productId\");\n  const action = formData.get(\"action\");\n  let wishlistItems;\n  if (action === \"add\") {\n    wishlistItems = await addToWishlist(request, productId);\n  } else if (action === \"remove\") {\n    wishlistItems = await removeFromWishlist(request, productId);\n  }\n  return json({\n    success: true\n  }, {\n    headers: {\n      \"Set-Cookie\": await wishlistCookie.serialize(wishlistItems)\n    }\n  });\n};\nexport default function Index() {\n  _s();\n  const {\n    products,\n    wishlistCount\n  } = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  return <Page title=\"Products\">\n      <Layout>\n        <Layout.Section>\n          <Banner title={`Your Wishlist has ${wishlistCount} items`} action={{\n          content: 'View Wishlist',\n          url: '/wishlist'\n        }} />\n        </Layout.Section>\n        <Layout.Section>\n          <Card>\n            <ResourceList resourceName={{\n            singular: 'product',\n            plural: 'products'\n          }} items={products} renderItem={product => {\n            const {\n              id,\n              title,\n              price,\n              description,\n              image,\n              inWishlist\n            } = product;\n            return <ResourceItem id={id} media={<Thumbnail source={image} alt={title} />} accessibilityLabel={`View details for ${title}`} onClick={() => {}}>\n                    <InlineStack>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h3\">{title}</Text>\n                        <Text as=\"p\">${price.toFixed(2)}</Text>\n                        <Text as=\"p\">{description}</Text>\n                      </BlockStack>\n                      <BlockStack>\n                          <BlockStack>\n                            <Button variant=\"primary\">Add to Cart</Button>\n                            <Form method=\"post\">\n                              <input type=\"hidden\" name=\"productId\" value={id} />\n                              <input type=\"hidden\" name=\"action\" value={inWishlist ? \"remove\" : \"add\"} />\n                              <Button submit disabled={isSubmitting} variant={inWishlist ? \"monochromePlain\" : \"plain\"}>\n                                {inWishlist ? \"Saved to Wishlist\" : \"Save for Later\"}\n                              </Button>\n                            </Form>\n                          </BlockStack>\n                        </BlockStack>\n                      </InlineStack>\n                  </ResourceItem>;\n          }} />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>;\n}\n_s(Index, \"tpBEhAT4eX6QtnveUMP4dv76uuU=\", false, function () {\n  return [useLoaderData, useNavigation];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
